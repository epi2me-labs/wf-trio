//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    help = false
    version = false
    
    out_dir = "output"
    client_fields = null
    aws_image_prefix = null
    aws_queue = null
    disable_ping = false
    analyse_unclassified = false
    watch_path = false


    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    phased = false
    proband_bam = null
    pat_bam = null
    mat_bam = null
    bed = null
    ref = null
    clair3_model_path = null
    // snp
    basecaller_cfg = "dna_r10.4.1_e8.2_400bps_sup@v4.3.0"
    // clair3 parameters
    clair3_trio_model = "r1041_e82_400bps_sup_nova"
    proband_sample_name = "proband"
    pat_sample_name = "paternal"
    mat_sample_name = "maternal"
    family_id = "family1"
    ctg_name = null
    include_all_ctgs = false
    ref_pct_full = 0.1
    var_pct_full = 0.3
    var_pct_phasing = 0.7
    GVCF = true
    snp_min_af = 0
    indel_min_af = 0
    vcf_fn = "EMPTY"
    min_contig_size = 0
    min_mq = 5
    min_cov = 2
    min_qual = 2
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf'
    glnexus_config = null
    pedigree_file = null
    use_longphase = false
    phase_trio = true
    base_err = 0.05
    gq_bin_size = 5

    wf {
        fastcat_stats = true
        bamstats = true
        keep_unaligned = false
        example_cmd = [
              "--proband_bam wf-trio-demo/Ashkenazi_test_TP_data/nf_bam_test_hg002/hg002.bam",
              "--pat_bam wf-trio-demo/Ashkenazi_test_TP_data/nf_bam_test_hg003",
              "--mat_bam wf-trio-demo/Ashkenazi_test_TP_data/nf_bam_test_hg004",
              "--ref wf-trio-demo/GCA_000001405.15_GRCh38_no_alt_analysis_set.fasta"
        ]


        // container sha
        trio_sha = "shac75a5f9b61823c9c311276506109211662a4ecd1"
        common_sha = "sha8b5843d549bb210558cbb676fe537a153ce771d6"
        e2l_snp_tag = "sha6d5c80963ce346695d98205563c87dc71fc182ff"
        e2l_base_tag = "shad3aed855cd007c653b8fc8cb16fe46c90199990f"
        clair3_nova_sha = "sha4fc26a597df4e693fd491f3ffe992e8151b773e6"
        
        agent = null
        epi2me_instance = null
        epi2me_user = null
    }
}

manifest {
    name            = 'epi2me-labs/wf-trio'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-trio'
    description     = 'Trio workflow'
    mainScript      = 'main.nf'
    nextflowVersion = '>=23.04.2'
    version         = 'v0.0.1'
}


// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
// for now human var snp container users clair3nova version
process {
    container = "ontresearch/wf-human-variation:${params.wf.e2l_base_tag}"
    withLabel:wf_common {
        container = "ontresearch/wf-common:${params.wf.common_sha}"
    }
    withLabel:clair3nova {
        container = "ontresearch/clair3-nova:${params.wf.clair3_nova_sha}"
    }
    withLabel:wf_human_snp {
        container = "ontresearch/wf-human-variation-snp:${params.wf.e2l_snp_tag}"
    }
    withLabel:wftrio {
        container = "ontresearch/wf-trio:${params.wf.trio_sha}"
    }

    shell = ['/bin/bash', '-euo', 'pipefail']
}



profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }


    // keep stub conda profile to prevent unknown profile warning so users get a better error
    conda {
        conda.enabled = true
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
           
            container = "${params.aws_image_prefix}-wf-common:${params.wf.common_sha}"
            withLabel:wf_common {
                container = "${params.aws_image_prefix}-wf-common:${params.wf.common_sha}"
            }
            withLabel:wftrio {
                container = "${params.aws_image_prefix}-wf-trio:${params.wf.trio_sha}"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }

    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/trace.txt"
}

env {
        PYTHONNOUSERSITE = 1
        JAVA_TOOL_OPTIONS = "-Xlog:disable -Xlog:all=warning:stderr"
}
