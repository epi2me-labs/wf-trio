{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/./master/nextflow_schema.json",
    "title": "epi2me-labs/wf-trio",
    "workflow_title": "Trio Sequencing workflow",
    "description": "Nextflow workflow for trio sequencing analysis.",
    "demo_url": "https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-trio/wf-trio-demo.tar.gz",
    "aws_demo_url": "https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-trio/wf-trio-demo/aws.nextflow.config",
    "url": "https://github.com/epi2me-labs/wf-trio",
    "type": "object",
    "definitions": {
        "input": {
            "title": "Input Options",
            "type": "object",
            "fa_icon": "fas fa-arrow-right",
            "description": "Parameters for finding and handling input data for analysis.",
            "properties": {
                "snp": {
                    "title": "SNP: Small variants",
                    "type": "boolean",
                    "description": "Call single nucleotide variants",
                    "help_text": "If this option is selected, small variant calling will be carried out using Clair3 Nova.",
                    "default": false
                },
                "proband_bam": {
                    "type": "string",
                    "format": "path",
                    "description": "Proband aligned BAM to use in the analysis.",
                    "help_text": "This accepts one of two cases: (i) the path to a single BAM file; (ii) the path to a top-level directory containing BAM files for a single sample."
                },
                "pat_bam": {
                    "type": "string",
                    "format": "path",
                    "description": "Paternal aligned BAM files to use in the analysis.",
                    "help_text": "This accepts one of two cases: (i) the path to a single BAM file; (ii) the path to a top-level directory containing BAM files for a single sample."
                },
                "mat_bam": {
                    "type": "string",
                    "format": "path",
                    "description": "Maternal aligned BAM files to use in the analysis.",
                    "help_text": "This accepts one of two cases: (i) the path to a single BAM file; (ii) the path to a top-level directory containing BAM files for a single sample."
                },
                "ref": {
                    "title": "Reference file",
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to a reference FASTA file.",
                    "help_text": "Reference against which to compare reads for variant calling.",
                    "overrides": {
                        "minknow": {
                            "hint": "alignmentRefFile",
                            "title": "Reference file for alignment"
                        }
                    }
                },
                "pedigree_file": {
                    "type": "string",
                    "format": "file-path",
                    "title": "Pedigree file",
                    "description": "TSV file containing the columns `family_id`, `individual_id`, `paternal_id`, `maternal_id`, `sex`, `phenotype`",
                    "help_text": "See https://gatk.broadinstitute.org/hc/en-us/articles/360035531972-PED-Pedigree-format for further information."
                },
                "clair3_model_path": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Clair3 model directory.",
                    "help_text": "The workflow will attempt to map the basecalling model used to a suitable Clair3 model. You can override this by providing the path to a model with this option instead. Models can be obtained from [this page](http://www.bio8.cs.hku.hk/clair3_trio/clair3_models/).",
                    "hidden": true
                },
                "clair3_nova_model_path": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Clair3 Nova model directory.",
                    "help_text": "The workflow will attempt to map the basecalling model used to a suitable Clair3 Nova model. You can override this by providing the path to a model with this option instead. Models can be obtained from [this page](http://www.bio8.cs.hku.hk/clair3_trio/clair3_nova_models/).",
                    "hidden": true
                },
                "analyse_unclassified": {
                    "type": "boolean",
                    "default": false,
                    "title": "Analyse unclassified reads",
                    "description": "Analyse unclassified reads from input directory. By default the workflow will not process reads in the unclassified directory.",
                    "help_text": "If selected and if the input is a multiplex directory the workflow will also process the unclassified directory."
                },
                "watch_path": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable to continuously watch the input directory for new input files.",
                    "help_text": "This option enables the use of Nextflow\u2019s directory watching feature to constantly monitor input directories for new files."
                },
                "client_fields": {
                    "type": "string",
                    "format": "file-path",
                    "description": "A JSON file of key value pairs to display on the report.",
                    "help_text": "This is used to populate a table of additional information (for example, about upstream components of an assay) to the workflow report.",
                    "hidden": true
                }
            },
            "allOf": [
                {
                    "required": [
                        "proband_bam",
                        "pat_bam",
                        "mat_bam",
                        "ref",
                        "pedigree_file"
                    ]
                }
            ],
            "anyOf": [
                {
                    "required": [
                        "sv"
                    ]
                },
                {
                    "required": [
                        "snp"
                    ]
                }
            ]
        },
        "samples": {
            "title": "Sample Options",
            "type": "object",
            "fa_icon": "fas fa-vials",
            "description": "Parameters that relate to samples such as sample sheets and sample names.",
            "properties": {
                "proband_sample_name": {
                    "type": "string",
                    "description": "A single sample name for non-multiplexed data. Permissible if passing a single .bam file or directory of .bam files.",
                    "default": "proband"
                },
                "pat_sample_name": {
                    "type": "string",
                    "description": "A single sample name for non-multiplexed data. Permissible if passing a single .fastq(.gz) file or directory of .fastq(.gz) files.",
                    "default": "paternal"
                },
                "mat_sample_name": {
                    "type": "string",
                    "description": "A single sample name for non-multiplexed data. Permissible if passing a single .fastq(.gz) file or directory of .fastq(.gz) files.",
                    "default": "maternal"
                },
                "family_id": {
                    "type": "string",
                    "description": "A single family ID relating to the group of samples.",
                    "default": "family1"
                }
            }
        },
        "output": {
            "title": "Output Options",
            "type": "object",
            "fa_icon": "fas fa-arrow-left",
            "description": "Parameters for saving and naming workflow outputs.",
            "properties": {
                "out_dir": {
                    "type": "string",
                    "default": "output",
                    "format": "directory-path",
                    "description": "Directory for output of all workflow results."
                }
            }
        },
        "sv_options": {
            "title": "Structural variant calling options",
            "type": "object",
            "description": "Options specific to the SV-calling subworkflow.",
            "properties": {
                "sv": {
                    "title": "SV: Structural variants",
                    "type": "boolean",
                    "description": "Call structural variants.",
                    "help_text": "If this option is selected, structural variant calling will be carried out using Sniffles2 using the combined multi-sample calling.",
                    "default": false
                },
                "cluster_merge_pos": {
                    "type": "number",
                    "default": 150,
                    "description": "Maximum merging distance for insertions and deletions on the same read and cluster in non-repeat regions.",
                    "hidden": true
                },
                "min_sv_length": {
                    "type": "number",
                    "default": 30,
                    "description": "Minimum structural variant size called by Sniffles2.",
                    "hidden": true,
                    "minimum": 30
                },
                "sniffles_args": {
                    "type": "string",
                    "description": "Additional command line arguments to pass to the Sniffles2 process",
                    "hidden": true,
                    "help_text": "The additional command line arguments will be passed directly to Sniffles2; ensure to use the right commands for the version, and from the command line provide them as follows: `--sniffles_args=\"--non-germline\"`."
                }
            }
        },
        "advanced_options": {
            "title": "Advanced Options",
            "type": "object",
            "fa_icon": "far fa-question-circle",
            "description": "Advanced options for configuring processes inside the workflow.",
            "help_text": "These advanced options do not need to be changed for typical use, but allow fine tuning of workflows for users who want more control over the workflow.",
            "properties": {
                "phased": {
                    "type": "boolean",
                    "default": true,
                    "description": "This option enables pedigree phasing of the outputs.",
                    "help_text": "If enabled the workflow will add phasing info to the joint VCF for SNPs and SVs, individual SV VCFs and BAMs will be haplotagged."
                },
                "bed": {
                    "title": "Target region BED file",
                    "type": "string",
                    "format": "file-path",
                    "description": "An optional BED file enumerating regions to process for variant calling.",
                    "help_text": "",
                    "overrides": {
                        "minknow": {
                            "hint": "alignmentBedFile",
                            "title": "Optional .bed file for enumerating regions to process for variant calling"
                        }
                    }
                },
                "override_basecaller_cfg": {
                    "title": "Override basecaller configuration",
                    "type": "string",
                    "description": "Name of the model to use for selecting a small variant calling model.",
                    "help_text": "The workflow will attempt to find the basecaller model from the headers of your input data. Providing a value for this option will override the model found in the data. If the model cannot be found in the header, it must be provided with this option. The basecaller model is used to automatically select the appropriate small variant calling model. The model list shows all models that are compatible for small variant calling with this workflow. You should select 'custom' to override the basecaller_cfg with clair3_model_path.",
                    "enum": [
                        "dna_r9.4.1_e8_sup@v3.6",
                        "dna_r9.4.1_e8_hac@v3.3",
                        "dna_r9.4.1_e8_sup@v3.3",
                        "dna_r9.4.1_450bps_hac_prom",
                        "dna_r9.4.1_450bps_hac",
                        "dna_r10.4.1_e8.2_400bps_sup@v4.3.0",
                        "custom"
                    ],
                    "overrides": {
                        "minknow": {
                            "hint": "basecallModel",
                            "hidden": true
                        }
                    }
                },
                "ctg_name": {
                    "type": "string",
                    "description": "The name of the sequence to be processed.",
                    "hidden": true
                },
                "include_all_ctgs": {
                    "type": "boolean",
                    "default": false,
                    "description": "Call for variants on all sequences in the reference, otherwise small and structural variants will only be called on chr{1..22,X,Y,MT}.",
                    "help_text": "Enabling this option will call for variants on all contigs of the input reference sequence. Typically this option is not required as standard human reference sequences contain decoy and unplaced contigs that are usually omitted for the purpose of variant calling. This option might be useful for non-standard reference sequence databases."
                },
                "ref_pct_full": {
                    "type": "number",
                    "default": 0.1,
                    "description": "Expected percentage of low quality 0/0 variants called in the pileup mode for full-alignment mode calling.",
                    "hidden": true
                },
                "var_pct_full": {
                    "type": "number",
                    "default": 0.3,
                    "description": "Expected percentage of low quality 0/1 and 1/1 variants called in the pileup mode for full-alignment mode calling.",
                    "hidden": true
                },
                "var_pct_phasing": {
                    "type": "number",
                    "default": 0.7,
                    "description": "Expected percentage of low quality 0/1 and 1/1 variants called in the pileup mode for phasing.",
                    "hidden": true
                },
                "snp_min_af": {
                    "type": "number",
                    "default": 0,
                    "description": "Minimum SNP AF required for a candidate variant.",
                    "hidden": true
                },
                "indel_min_af": {
                    "type": "number",
                    "default": 0,
                    "description": "Minimum Indel AF required for a candidate variant.",
                    "hidden": true
                },
                "vcf_fn": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Candidate sites VCF file input, variants will only be called at the sites in the VCF file if provided.",
                    "hidden": true,
                    "default": "EMPTY"
                },
                "min_mq": {
                    "type": "number",
                    "default": 5,
                    "description": "Reads with mapping quality < min_mq are filtered (experimental).",
                    "hidden": true
                },
                "min_qual": {
                    "type": "number",
                    "default": 2,
                    "description": "Variants with >=min_qual will be marked 'PASS', or 'LowQual' otherwise, optional.",
                    "hidden": true
                },
                "min_contig_size": {
                    "type": "number",
                    "default": 0,
                    "description": "Contigs with contig size < min_contig_size are filtered (experimental).",
                    "hidden": true
                },
                "use_longphase": {
                    "type": "boolean",
                    "default": false,
                    "description": "Use longphase for phasing.",
                    "hidden": true
                },
                "min_cov": {
                    "type": "number",
                    "default": 2,
                    "description": "Minimum coverage required to call a variant (experimental).",
                    "hidden": true
                },
                "GVCF": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable to output a gVCF file in addition to the VCF outputs (experimental).",
                    "help_text": "By default the workflow outputs a VCF file containing only records where a variant has been detected. Enabling this option will additionally output a gVCF with records spanning all reference positions regardless of whether a variant was detected in the sample."
                },
                "glnexus_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "glnexus config yaml file, a default one is provided.",
                    "help_text": "See https://github.com/dnanexus-rnd/GLnexus/wiki/Configuration for further details."
                },
                "base_err": {
                    "type": "number",
                    "default": 0.05,
                    "description": "Estimated base error rate when enabling gvcf option, default: 0.05 (Reducing this will reduce the number of `./.` variants).",
                    "hidden": true
                },
                "gq_bin_size": {
                    "type": "number",
                    "default": 5,
                    "description": "Default gq bin size for merge non-variant block when enabling gvcf option, default: 5.",
                    "hidden": true
                },
                "tr_bed": {
                    "title": "Tandem repeat BED file",
                    "type": "string",
                    "format": "file-path",
                    "hidden": true,
                    "description": "Input BED file containing tandem repeat annotations for the reference genome.",
                    "help_text": "Providing a tandem repeat BED can improve calling in repetitive regions."
                }
            }
        },
        "misc": {
            "title": "Miscellaneous Options",
            "type": "object",
            "description": "Everything else.",
            "default": "",
            "properties": {
                "disable_ping": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable to prevent sending a workflow ping."
                },
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "default": false,
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "default": false,
                    "hidden": true
                },
                "str": {
                    "type": "boolean",
                    "description": "Unused hidden param required for wf-human-variation.",
                    "help_text": "This parameter is included for support with wf-human-variation, its setting has no effect.",
                    "default": false,
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input"
        },
        {
            "$ref": "#/definitions/samples"
        },
        {
            "$ref": "#/definitions/output"
        },
        {
            "$ref": "#/definitions/advanced_options"
        },
        {
            "$ref": "#/definitions/sv_options"
        },
        {
            "$ref": "#/definitions/misc"
        }
    ],
    "properties": {
        "aws_image_prefix": {
            "type": "string",
            "hidden": true
        },
        "aws_queue": {
            "type": "string",
            "hidden": true
        },
        "monochrome_logs": {
            "type": "boolean"
        },
        "validate_params": {
            "type": "boolean",
            "default": true
        },
        "show_hidden_params": {
            "type": "boolean"
        }
    },
    "resources": {
        "recommended": {
            "cpus": 2,
            "memory": "2GB"
        },
        "minimum": {
            "cpus": 2,
            "memory": "2GB"
        },
        "run_time": "5 minutes per sample",
        "arm_support": true 
    }
}